#quarkus.http.port=8280

quarkus.datasource.url=jdbc:postgresql://localhost:54320/postgres
quarkus.datasource.driver=org.postgresql.Driver
quarkus.datasource.username=admin
quarkus.datasource.password=123456

quarkus.swagger-ui.path=/swagger-ui
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.enable=true

%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script=import-dev.sql

%prod.quarkus.hibernate-orm.database.generation=none
%prod.quarkus.hibernate-orm.sql-load-script=no-file

quarkus.jaeger.service-name=quarkus-basic
#const(1 = rastreia todas as requisições, 0 = não rastreia ), probabilistic (0.2 = 20% das requisições são rastreadas)
#ratelimiting (2 = rastrea no maximo 2 transacoes por segundo), remote (configuração será feita em um agent)
quarkus.jaeger.sampler-type=const
#todas as requisicoes serão rastreadas
quarkus.jaeger.sampler-param=1
quarkus.jaeger.endpoint=http://localhost:14268/api/traces

#Configuração do client REST, utilizado no teste de tracing com Jaeger
ufs-api/mp-rest/url=http://localhost:8180/
ufs-api/mp-rest/scope=javax.inject.Singleton 
